{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.tsx","webpack:///./src/model/collisions.ts","webpack:///./src/model/simulation.ts","webpack:///./src/view/canvas-renderer.ts","webpack:///external \"tf\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","import * as tf from \"@tensorflow/tfjs\";\nimport { PhysicsBody } from \"./model/physics-body\";\nimport {\n  bodiesToTensor,\n  stepGravity,\n  tensorToBodies,\n  updateTensor,\n  stepBoundary\n} from \"./model/simulation\";\nimport { renderToCanvas } from \"./view/canvas-renderer\";\nimport { stepCollisions } from \"./model/collisions\";\n\nfunction boxMuller() {\n  let u1 = Math.random();\n  let u2 = Math.random();\n\n  let r = Math.sqrt(-2 * Math.log(u1));\n  let t = 2 * Math.PI * u2;\n\n  let z0 = r * Math.cos(t);\n  let z1 = r * Math.sin(t);\n\n  return [z0, z1] as [number, number];\n}\n\nfunction randomBody(maxX: number, maxY: number): PhysicsBody {\n  let posX = Math.random() * maxX;\n  let posY = Math.random() * maxY;\n\n  let [velX, velY] = boxMuller();\n  velX *= 50;\n  velY *= 50;\n\n  let radius = Math.random() * 20 + 10;\n\n  return { posX, posY, velX, velY, radius };\n}\n\nconsole.debug(`[Global] TF Backend: ${tf.getBackend()}`);\n\nconst hash = window.location.hash.substr(1);\nconst params: { n?: string } = hash\n  .split(\"&\")\n  .reduce(function(result: any, item) {\n    var parts = item.split(\"=\");\n    result[parts[0]] = parts[1];\n    return result;\n  }, {});\n\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nconst ctx = canvas.getContext(\"2d\");\n\nlet bodies: PhysicsBody[] = new Array(params.n ? +params.n : 10)\n  .fill(null)\n  .map(() => randomBody(canvas.width, canvas.height));\n\nlet data = bodiesToTensor(bodies);\n\nlet lastT = 0;\nasync function animate(t: number) {\n  let dt = lastT ? (t - lastT) / 1000 : 1 / 60;\n  lastT = t;\n  dt = Math.min(dt, 1);\n\n  // step the simulation\n  data = updateTensor(data, data =>\n    stepGravity(data, { dt, gravConst: 1e5, dragCoeff: 0.1 })\n  );\n  data = updateTensor(data, data =>\n    stepBoundary(data, { maxX: canvas.width, maxY: canvas.height })\n  );\n\n  // Retrieve data to draw\n  bodies = await tensorToBodies(data, bodies);\n\n  // apply collisions\n  stepCollisions(bodies);\n  data.dispose();\n  data = bodiesToTensor(bodies);\n\n  // Draw\n  ctx.fillStyle = \"rgba(255, 255, 255, 0.1)\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = \"black\";\n  renderToCanvas(ctx, bodies);\n\n  requestAnimationFrame(animate);\n}\n\nrequestAnimationFrame(animate);\n\nsetInterval(() => console.log(tf.memory()), 5000);\n// data.dispose()\n","import { PhysicsBody } from \"./physics-body\";\n\n/**\n * Select the kth smallest element in xs\n * O(n)\n */\nfunction kSelect(k: number, xs: number[]): number {\n  let pivot = xs[Math.floor(Math.random() * xs.length)];\n  let low = xs.filter(x => x < pivot);\n\n  if (low.length + 1 == k) {\n    return pivot;\n  }\n\n  if (low.length >= k) {\n    return kSelect(k, low);\n  } else {\n    let high = xs.filter(x => x >= pivot);\n    return kSelect(k - low.length, high);\n  }\n}\n\n/**\n * Computes the mean of xs\n * O(n)\n */\nfunction median(xs: number[]) {\n  let k = Math.floor(xs.length / 2);\n  if (xs.length % 2) {\n    return kSelect(k, xs);\n  } else {\n    return (kSelect(k - 1, xs) + kSelect(k, xs)) / 2;\n  }\n}\n\nclass KDTree {\n  private isLeaf: boolean;\n  private bodies: PhysicsBody[];\n  private splitByX: boolean;\n  private splitPoint: number;\n  private low: KDTree;\n  private high: KDTree;\n\n  constructor(bodies: PhysicsBody[], splitThreshold: number, maxDepth: number) {\n    /** @member {boolean} */\n    this.isLeaf = maxDepth == 0 || bodies.length <= splitThreshold;\n    if (this.isLeaf) {\n      this.bodies = bodies;\n      return;\n    }\n\n    let xs = bodies.map(c => c.posX);\n    let ys = bodies.map(c => c.posY);\n\n    let rangeX = Math.max(...xs) - Math.min(...xs);\n    let rangeY = Math.max(...ys) - Math.min(...ys);\n\n    /** @member {boolean} */\n    this.splitByX = rangeX > rangeY;\n\n    if (this.splitByX) {\n      this.splitPoint = median(xs);\n      this.low = new KDTree(\n        bodies.filter(c => c.posX < this.splitPoint),\n        splitThreshold,\n        maxDepth - 1\n      );\n      this.high = new KDTree(\n        bodies.filter(c => c.posX >= this.splitPoint),\n        splitThreshold,\n        maxDepth - 1\n      );\n    } else {\n      this.splitPoint = median(ys);\n      this.low = new KDTree(\n        bodies.filter(c => c.posY < this.splitPoint),\n        splitThreshold,\n        maxDepth - 1\n      );\n      this.high = new KDTree(\n        bodies.filter(c => c.posY >= this.splitPoint),\n        splitThreshold,\n        maxDepth - 1\n      );\n    }\n  }\n\n  query(x: number, y: number, radius: number) {\n    if (this.isLeaf) {\n      return this.bodies.filter(\n        c =>\n          Math.pow(c.posX - x, 2) + Math.pow(c.posY - y, 2) <=\n          Math.pow(radius, 2)\n      );\n    }\n\n    let results: PhysicsBody[] = [];\n    if (this.splitByX) {\n      if (x - radius < this.splitPoint) {\n        results.push(...this.low.query(x, y, radius));\n      }\n      if (x + radius >= this.splitPoint) {\n        results.push(...this.high.query(x, y, radius));\n      }\n    } else {\n      if (y - radius < this.splitPoint) {\n        results.push(...this.low.query(x, y, radius));\n      }\n      if (y + radius >= this.splitPoint) {\n        results.push(...this.high.query(x, y, radius));\n      }\n    }\n\n    return results;\n  }\n}\n\nfunction dist(body1: PhysicsBody, body2: PhysicsBody) {\n  return Math.sqrt(\n    Math.pow(body1.posX - body2.posX, 2) + Math.pow(body1.posY - body2.posY, 2)\n  );\n}\n\nfunction* computeCollisions(kdtree: KDTree, bodies: PhysicsBody[]) {\n  for (let body of bodies) {\n    const candidates = kdtree.query(body.posX, body.posY, body.radius + 15);\n    const colliders = candidates.filter(\n      candidate =>\n        dist(body, candidate) < body.radius + candidate.radius &&\n        body.posX < candidate.posX\n    );\n\n    for (let collider of colliders) {\n      yield [body, collider] as [PhysicsBody, PhysicsBody];\n    }\n  }\n}\n\nfunction computeElasticCollision(\n  x1: number,\n  y1: number,\n  dx1: number,\n  dy1: number,\n  x2: number,\n  y2: number,\n  dx2: number,\n  dy2: number\n) {\n  // recompute velocities\n\n  let dx1f =\n    (dx2 * Math.pow(x1 - x2, 2) +\n      (-((dy1 - dy2) * (x1 - x2)) + dx1 * (y1 - y2)) * (y1 - y2)) /\n    (Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n  let dy1f =\n    (dy1 * Math.pow(x1 - x2, 2) +\n      (-((dx1 - dx2) * (x1 - x2)) + dy2 * (y1 - y2)) * (y1 - y2)) /\n    (Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n  let dx2f =\n    (dx1 * Math.pow(x1 - x2, 2) +\n      ((dy1 - dy2) * (x1 - x2) + dx2 * (y1 - y2)) * (y1 - y2)) /\n    (Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n  let dy2f =\n    (dy2 * Math.pow(x1 - x2, 2) +\n      ((dx1 - dx2) * (x1 - x2) + dy1 * (y1 - y2)) * (y1 - y2)) /\n    (Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\n  return [dx1f, dy1f, dx2f, dy2f];\n}\n\nfunction separate(body1: PhysicsBody, body2: PhysicsBody) {\n  const l = dist(body1, body2);\n\n  const ux =\n    (((body1.posX - body2.posX) / l) * (body1.radius + body2.radius - l)) / 2;\n  const uy =\n    (((body1.posY - body2.posY) / l) * (body1.radius + body2.radius - l)) / 2;\n\n  body1.posX += ux;\n  body1.posY += uy;\n\n  body2.posX -= ux;\n  body2.posY -= uy;\n}\n\nexport function stepCollisions(bodies: PhysicsBody[]) {\n  const kdtree = new KDTree(bodies, 3, 15);\n\n  let itr = computeCollisions(kdtree, bodies);\n  for (let { value, done } = itr.next(); !done; { value, done } = itr.next()) {\n    const [circle1, circle2] = value || null;\n    [\n      circle1.velX,\n      circle1.velY,\n      circle2.velX,\n      circle2.velY\n    ] = computeElasticCollision(\n      circle1.posX,\n      circle1.posY,\n      circle1.velX,\n      circle1.velY,\n      circle2.posX,\n      circle2.posY,\n      circle2.velX,\n      circle2.velY\n    );\n    separate(circle1, circle2);\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\";\nimport { PhysicsBody } from \"./physics-body\";\nimport { Tensor } from \"@tensorflow/tfjs\";\n\nexport function bodiesToTensor(bodies: PhysicsBody[]) {\n  return tf.tensor(\n    bodies.map(({ posX, posY, velX, velY, radius }) => [\n      posX,\n      posY,\n      velX,\n      velY,\n      radius\n    ])\n  );\n}\n\n/**\n * Helper function for operating on immutable tensors with proper memory\n * management\n *\n * Example: data = updateTensor(data, (data) => f(data, opts))\n *\n * @param data\n * @param callback\n */\nexport function updateTensor(\n  data: Tensor,\n  callback: (data: Tensor) => tf.Tensor\n) {\n  const result = callback(data);\n  data.dispose();\n  return result;\n}\n\nexport async function tensorToBodies(\n  data: tf.Tensor\n): Promise<Partial<PhysicsBody>[]>;\nexport async function tensorToBodies(\n  data: tf.Tensor,\n  bodies: PhysicsBody[]\n): Promise<PhysicsBody[]>;\nexport async function tensorToBodies(\n  data: tf.Tensor,\n  bodies?: PhysicsBody[]\n): Promise<Partial<PhysicsBody>[]> {\n  const array = (await data.array()) as [\n    number,\n    number,\n    number,\n    number,\n    number\n  ][];\n\n  return array.map(([posX, posY, velX, velY, radius], i) => ({\n    ...(bodies ? bodies[i] : {}),\n    posX,\n    posY,\n    velX,\n    velY,\n    radius\n  }));\n}\n\nexport function stepGravity(\n  data: Tensor,\n  {\n    dt,\n    gravConst = 1,\n    dragCoeff = 0\n  }: { dt: number; gravConst?: number; dragCoeff?: number }\n) {\n  return tf.tidy(() => {\n    const pos = data.slice([0, 0], [-1, 2]);\n    const vel = data.slice([0, 2], [-1, 2]);\n    const radius = data.slice([0, 4], [-1, 1]);\n\n    const r = tf.sub(pos.expandDims(), pos.expandDims(1));\n    const rNorm = tf.norm(r, 2, 2);\n\n    const diagMask = tf.sub(1, tf.eye(pos.shape[0])).expandDims(2);\n    const force = tf.mul(\n      -gravConst,\n      tf.mul(diagMask, tf.div(r, tf.pow(rNorm, 3).expandDims(2)))\n    );\n\n    const acc = tf.sub(tf.sum(force, 0), tf.mul(dragCoeff, vel));\n\n    const newVel = tf.add(vel, tf.mul(dt, acc));\n    const newPos = tf.add(pos, tf.mul(dt, newVel));\n\n    const newData = tf.concat([newPos, newVel, radius], 1);\n    return newData;\n  });\n}\n\nexport function stepBoundary(\n  data: Tensor,\n  {\n    minX = 0,\n    minY = 0,\n    maxX,\n    maxY\n  }: { minX?: number; minY?: number; maxX: number; maxY: number }\n) {\n  return tf.tidy(() => {\n    const pos = data.slice([0, 0], [-1, 2]);\n    const vel = data.slice([0, 2], [-1, 2]);\n    const radius = data.slice([0, 4], [-1, 1]);\n\n    const oob = tf.logicalOr(\n      tf.less(tf.sub(pos, radius), [minX, minY]),\n      tf.greater(tf.add(pos, radius), [maxX, maxY])\n    );\n\n    const newPos = tf.minimum(\n      tf.maximum(pos, tf.add([[minX, minY]], radius)),\n      tf.sub([[maxX, maxY]], radius)\n    );\n    const newVel = tf.mul(vel, tf.sub(1, tf.mul(oob, 2)));\n\n    const newData = tf.concat([newPos, newVel, radius], 1);\n    return newData;\n  });\n}\n","import { PhysicsBody } from \"../model/physics-body\";\nexport function renderToCanvas(\n  ctx: CanvasRenderingContext2D,\n  bodies: PhysicsBody[]\n) {\n  bodies.forEach(({ posX, posY, radius }) => {\n    ctx.beginPath();\n    ctx.arc(posX, posY, radius, 0, 2 * Math.PI);\n    ctx.fill();\n  });\n}\n","module.exports = tf;"],"sourceRoot":""}